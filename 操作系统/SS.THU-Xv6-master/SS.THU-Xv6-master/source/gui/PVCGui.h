#ifndef PVCGUI_H
#define PVCGUI_H

#include "PVCObject.h"

void pvcGuiInit(void);

void sendMessage(int wndId, PMessage msg);

void pvcDrawMouse();

void pvcFlushWnd(int x, int y, int w, int h);

void updateTimer();

////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////

void pvcTimerListInit(PTimerList * list);

void pvcTimerListAddToHead(PTimerList * list, int wndId, int id, int interval);

void pvcTimerListRemoveWndId(PTimerList * list, int wndId);

void pvcTimerListRemoveId(PTimerList * list, int wndId, int id);

////////////////////////////////////////////////////////////////////////////

void pvcWndListInit(PWndList * list);

void pvcWndListAddToHead(PWndList * list, PHwnd hwnd);

void pvcWndListMoveToHead(PWndList * list, int wndId);

void pvcWndListMoveToTail(PWndList * list, int wndId);

void pvcWndListRemove(PWndList * list, int wndId);

void pvcWndListDestroy(PWndList * list);

////////////////////////////////////////////////////////////////////////////

void pvcMsgQueueInit(PMsgQueue * queue);

void pvcMsgQueueEnQueue(PMsgQueue * queue, PMessage msg);

PMessage pvcMsgQueueDeQueue(PMsgQueue * queue);

////////////////////////////////////////////////////////////////////////////

static inline bool contain(PRect rect, int x, int y)
{
	if (x >= rect.x && x < rect.x + rect.w && y >= rect.y && y < rect.y + rect.h)
		return true;
	return false;
}

#endif
